FROM ubuntu:20.04

# Set non-interactive frontend to avoid interactive prompts during build
ARG DEBIAN_FRONTEND=noninteractive

# Install essential packages and clean up in one layer
RUN apt-get update -y && \
    apt-get install -y git wget cmake gcc g++ cpp curl software-properties-common graphviz libconfuse-dev libpcap-dev libxml2-dev net-tools && \
    rm -rf /var/lib/apt/lists/*

# Install Python 3.8
RUN add-apt-repository ppa:deadsnakes/ppa -y && \
    apt-get update -y && \
    apt-get install -y python3.8 python3.8-venv && \
    rm -rf /var/lib/apt/lists/*

# Install Python pip
RUN python3.8 -m ensurepip && \
    python3.8 --version && \
    pip3 --version

# Install Node.js and clear npm cache
RUN curl -sL https://deb.nodesource.com/setup_19.x | bash && \
    apt-get install -y nodejs && \
    npm install pm2 -g && \
    npm cache clean --force

# Set working directory
WORKDIR /maip-app

# Copy the source code
COPY . .

# Install Python dependencies
RUN pip3 install -r src/server/deep-learning/requirements.txt

# Install npm packages
RUN npm install

# Copy example environment file to .env
RUN cp env.example .env

# Install MMT packages
RUN dpkg -i src/server/mmt-packages/mmt-dpi*.deb && \
    dpkg -i src/server/mmt-packages/mmt-security*.deb && \
    dpkg -i src/server/mmt-packages/mmt-probe*.deb 2>/dev/null || true && \
    ldconfig

# Set environment variables
ENV LD_PRELOAD=/lib/aarch64-linux-gnu/libgomp.so.1 \
    DOCKER_ENV=true

EXPOSE 31057

# Command to run the application
CMD ["./start-maip.sh"]
